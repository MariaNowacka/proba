# -*- coding: utf-8 -*-
"""l1.1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1br6f503TJjbg9VFSDuHnA4rY8Cm4UwBm
"""

import numpy as np
import random
import math

class Vector:
    def __init__(self,arg=3):
        self.v=list(np.zeros(arg))
        self.arg=arg


    def __str__(self):
      # funkcja print
      # output : imię i współrzędne rakiety
        return str(self.v)

    def gen (self):
      l=[]
      for i in range (self.arg):
        l.append(random.random()*int(random.choice([1,10,100])))
      return l
    
    def wczyt (self,lista):
      if len(lista)!=self.arg:
        raise ValueError('nieodpowiednia długość wektora')
      else:
        self.v=lista

    def __add__(self,other):
      a=list(np.zeros(self.arg))
      if other.arg!=self.arg:
        raise ValueError('nieodpowiednia długość wektorów')
      else:
        for i in range(len(self.v)):
          a[i]=self.v[i]+other.v[i]
      return a

    def __sub__(self,other):
      if other.arg!=self.arg:
        raise ValueError('nieodpowiednia długość wektorów')
      else:
        b=list(np.zeros(self.arg))
        for i in range(len(self.v)):
          b[i]=self.v[i]-other.v[i]
        return b      
    
    def __mul__(self,x):
      c=list(np.zeros(self.arg))
      if type(self)==type(x):
        for i in range(len(self.v)):
          c[i]=self.v[i]*(x.v[i])
        return sum(c)
      else:
        for i in range(len(self.v)):
          c[i]=self.v[i]*x
        return c

    def __len__(self):
      return self.arg

    def __contains__(self,x):
      return x in self.v

    def dl(self):
      k1=[]
      k2=0
      for i in range (self.arg):
        k1[i]=self.v[i]**2
        k2=k2+float(k1[i])
      d=math.sqrt(k2)
      return d

    def suma(self):
      return sum(self.v)
      

v1=Vector()
v2=Vector()
v3=Vector(2)
print('v1 ',v1)
v1.wczyt(v1.gen())
print('v1 ',v1)
#print('v1 suma ',v1.suma())
v2.wczyt(v2.gen())
print('v2 ',v2)
print('suma ',v1+v2)
print('rozn ',v1-v2)
print('v*5 ',v1*5)
v3.wczyt([1,2])
print('v3 ',v3)
print(2 in v3)
print(len(v1))
print('mnoz ',v1*v2)

"""https://www.tutorialsteacher.com/python/magic-methods-in-python 
https://www.geeksforgeeks.org/python-__add__-magic-method/
https://tomaszgolan.github.io/js-python/wyklady/js-python_w10/
http://prac.im.pwr.wroc.pl/~szwabin/assets/prog/lec/4.pdf

http://prac.im.pwr.wroc.pl/~szwabin/assets/prog/lec/4.pdf
"""

